version: '3.8'

services:
  postgres:
    container_name: e-petitions-project-db
    image: postgres:16.0
    networks:
      - e-petitions-network
    environment:
      POSTGRES_DB : e-petitions-project-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pass
      PGDATA: /data/e-petitions-project-db
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres-db:/data/postgres
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 60s

  redis:
    image: redis:7.0.13
    networks:
      - e-petitions-network
    container_name: e-petitions-redis-db
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.13-rc-management
    networks:
      - e-petitions-network
    container_name: e-petitions-project-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: e-petitions-project-elasticsearch
    networks:
      - e-petitions-network
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  prometheus:
    image: prom/prometheus:v2.37.9
    container_name: prometheus
    networks:
      - e-petitions-network
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    networks:
      - e-petitions-network
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  front:
    container_name: front
    image: ktruedat/e-petitions-front:1.1
    networks:
      - e-petitions-network
    ports:
      - "8080:8080"

  gateway:
    container_name: gateway
    image: e-petitions-gateway:1.0
    build:
      context: ./gateway
      dockerfile: Dockerfile
    networks:
      - e-petitions-network
    ports:
      - "1337:1337"

  security-service:
    container_name: security-service
    image: e-petitions-security:1.0
    build:
      context: ./security_service
      dockerfile: Dockerfile
    networks:
      - e-petitions-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "50051:50051"
      - "40001:40001"

  user-service:
    container_name: user-service
    image: e-petitions-user:1.0
    build:
      context: ./user_service
      dockerfile: Dockerfile
    networks:
      - e-petitions-network
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "50052:50052"
      - "40002:40002"

  petition-service:
    container_name: petition-service
    image: e-petitions-petition:1.0
    build:
      context: ./petition_service
      dockerfile: Dockerfile
    networks:
      - e-petitions-network
    depends_on:
      user-service:
        condition: service_started
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "50050:50050"
      - "40000:40000"

  mail-service:
    container_name: mail-service
    image: e-petitions-mail:1.0
    build:
      context: ./mail_service
      dockerfile: Dockerfile
    networks:
      - e-petitions-network
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  postgres-db:
    driver: local
  redis-data:
    driver: local
  esdata:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
networks:
  e-petitions-network:
    driver: bridge